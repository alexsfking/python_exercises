'''
minimum and xor or
'''

t_cases=int(input())
for _ in range(t_cases):
    n_size=int(input())
    a_list=sorted(list(map(int,input().split())))
    min=float('inf')
    for i in range(len(a_list)-1):
        current=(a_list[i] & a_list[i+1])^(a_list[i] | a_list[i+1])
        if(current<min):
            min=current
    print(min)

#first we calculate the pattern
'''
def print_output(some_dict:dict):
    out=[]
    for key, value in some_dict.items():
        out.append((key[0],key[1],value))
    return out

a=[i for i in range(0,18)]
and_dict=dict()
or_dict=dict()
xor_dict=dict()
algo_dict=dict()
for x in range(len(a)):
    for y in range(len(a)):
        if(x==y):
            continue
        and_dict[(a[x],a[y])]=a[x] & a[y]
        or_dict[(a[x],a[y])]=a[x] | a[y]
        #xor_dict[(a[x],a[y])]=a[x] ^ a[y]
        algo_dict[(a[x],a[y])]=and_dict[(a[x],a[y])] ^ or_dict[(a[x],a[y])]


#print("AND: ")
#print_output(and_dict)
#print("OR: ")
#print_output(or_dict)
#print("XOR: ")
#print_output(xor_dict)
print("ALL: ")
for elem in sorted(print_output(algo_dict),key=lambda x: x[2]):
    print(elem)
'''

'''
min
if a is odd b=a-1
if a is even b=a+1

ALL: 
(0, 1, 1)
(1, 0, 1)
(2, 3, 1)
(3, 2, 1)
(4, 5, 1)
(5, 4, 1)
(6, 7, 1)
(7, 6, 1)
(8, 9, 1)
(9, 8, 1)
(10, 11, 1)
(11, 10, 1)
(12, 13, 1)
(13, 12, 1)
(14, 15, 1)
(15, 14, 1)
(16, 17, 1)
(17, 16, 1)
(0, 2, 2)
(1, 3, 2)
(2, 0, 2)
(3, 1, 2)
(4, 6, 2)
(5, 7, 2)
(6, 4, 2)
(7, 5, 2)
(8, 10, 2)
(9, 11, 2)
(10, 8, 2)
(11, 9, 2)
(12, 14, 2)
(13, 15, 2)
(14, 12, 2)
(15, 13, 2)
(0, 3, 3)
(1, 2, 3)
(2, 1, 3)
(3, 0, 3)
(4, 7, 3)
(5, 6, 3)
(6, 5, 3)
(7, 4, 3)
(8, 11, 3)
(9, 10, 3)
(10, 9, 3)
(11, 8, 3)
(12, 15, 3)
(13, 14, 3)
(14, 13, 3)
(15, 12, 3)
(0, 4, 4)
(1, 5, 4)
(2, 6, 4)
(3, 7, 4)
(4, 0, 4)
(5, 1, 4)
(6, 2, 4)
(7, 3, 4)
(8, 12, 4)
(9, 13, 4)
(10, 14, 4)
(11, 15, 4)
(12, 8, 4)
(13, 9, 4)
(14, 10, 4)
(15, 11, 4)
(0, 5, 5)
(1, 4, 5)
(2, 7, 5)
(3, 6, 5)
(4, 1, 5)
(5, 0, 5)
(6, 3, 5)
(7, 2, 5)
(8, 13, 5)
(9, 12, 5)
(10, 15, 5)
(11, 14, 5)
(12, 9, 5)
(13, 8, 5)
(14, 11, 5)
(15, 10, 5)
(0, 6, 6)
(1, 7, 6)
(2, 4, 6)
(3, 5, 6)
(4, 2, 6)
(5, 3, 6)
(6, 0, 6)
(7, 1, 6)
(8, 14, 6)
(9, 15, 6)
(10, 12, 6)
(11, 13, 6)
(12, 10, 6)
(13, 11, 6)
(14, 8, 6)
(15, 9, 6)
(0, 7, 7)
(1, 6, 7)
(2, 5, 7)
(3, 4, 7)
(4, 3, 7)
(5, 2, 7)
(6, 1, 7)
(7, 0, 7)
(8, 15, 7)
(9, 14, 7)
(10, 13, 7)
(11, 12, 7)
(12, 11, 7)
(13, 10, 7)
(14, 9, 7)
(15, 8, 7)
(0, 8, 8)
(1, 9, 8)
(2, 10, 8)
(3, 11, 8)
(4, 12, 8)
(5, 13, 8)
(6, 14, 8)
(7, 15, 8)
(8, 0, 8)
(9, 1, 8)
(10, 2, 8)
(11, 3, 8)
(12, 4, 8)
(13, 5, 8)
(14, 6, 8)
(15, 7, 8)
(0, 9, 9)
(1, 8, 9)
(2, 11, 9)
(3, 10, 9)
(4, 13, 9)
(5, 12, 9)
(6, 15, 9)
(7, 14, 9)
(8, 1, 9)
(9, 0, 9)
(10, 3, 9)
(11, 2, 9)
(12, 5, 9)
(13, 4, 9)
(14, 7, 9)
(15, 6, 9)
(0, 10, 10)
(1, 11, 10)
(2, 8, 10)
(3, 9, 10)
(4, 14, 10)
(5, 15, 10)
(6, 12, 10)
(7, 13, 10)
(8, 2, 10)
(9, 3, 10)
(10, 0, 10)
(11, 1, 10)
(12, 6, 10)
(13, 7, 10)
(14, 4, 10)
(15, 5, 10)
(0, 11, 11)
(1, 10, 11)
(2, 9, 11)
(3, 8, 11)
(4, 15, 11)
(5, 14, 11)
(6, 13, 11)
(7, 12, 11)
(8, 3, 11)
(9, 2, 11)
(10, 1, 11)
(11, 0, 11)
(12, 7, 11)
(13, 6, 11)
(14, 5, 11)
(15, 4, 11)
(0, 12, 12)
(1, 13, 12)
(2, 14, 12)
(3, 15, 12)
(4, 8, 12)
(5, 9, 12)
(6, 10, 12)
(7, 11, 12)
(8, 4, 12)
(9, 5, 12)
(10, 6, 12)
(11, 7, 12)
(12, 0, 12)
(13, 1, 12)
(14, 2, 12)
(15, 3, 12)
(0, 13, 13)
(1, 12, 13)
(2, 15, 13)
(3, 14, 13)
(4, 9, 13)
(5, 8, 13)
(6, 11, 13)
(7, 10, 13)
(8, 5, 13)
(9, 4, 13)
(10, 7, 13)
(11, 6, 13)
(12, 1, 13)
(13, 0, 13)
(14, 3, 13)
(15, 2, 13)
(0, 14, 14)
(1, 15, 14)
(2, 12, 14)
(3, 13, 14)
(4, 10, 14)
(5, 11, 14)
(6, 8, 14)
(7, 9, 14)
(8, 6, 14)
(9, 7, 14)
(10, 4, 14)
(11, 5, 14)
(12, 2, 14)
(13, 3, 14)
(14, 0, 14)
(15, 1, 14)
(0, 15, 15)
(1, 14, 15)
(2, 13, 15)
(3, 12, 15)
(4, 11, 15)
(5, 10, 15)
(6, 9, 15)
(7, 8, 15)
(8, 7, 15)
(9, 6, 15)
(10, 5, 15)
(11, 4, 15)
(12, 3, 15)
(13, 2, 15)
(14, 1, 15)
(15, 0, 15)
(0, 16, 16)
(1, 17, 16)
(16, 0, 16)
(17, 1, 16)
(0, 17, 17)
(1, 16, 17)
(16, 1, 17)
(17, 0, 17)
(2, 16, 18)
(3, 17, 18)
(16, 2, 18)
(17, 3, 18)
(2, 17, 19)
(3, 16, 19)
(16, 3, 19)
(17, 2, 19)
(4, 16, 20)
(5, 17, 20)
(16, 4, 20)
(17, 5, 20)
(4, 17, 21)
(5, 16, 21)
(16, 5, 21)
(17, 4, 21)
(6, 16, 22)
(7, 17, 22)
(16, 6, 22)
(17, 7, 22)
(6, 17, 23)
(7, 16, 23)
(16, 7, 23)
(17, 6, 23)
(8, 16, 24)
(9, 17, 24)
(16, 8, 24)
(17, 9, 24)
(8, 17, 25)
(9, 16, 25)
(16, 9, 25)
(17, 8, 25)
(10, 16, 26)
(11, 17, 26)
(16, 10, 26)
(17, 11, 26)
(10, 17, 27)
(11, 16, 27)
(16, 11, 27)
(17, 10, 27)
(12, 16, 28)
(13, 17, 28)
(16, 12, 28)
(17, 13, 28)
(12, 17, 29)
(13, 16, 29)
(16, 13, 29)
(17, 12, 29)
(14, 16, 30)
(15, 17, 30)
(16, 14, 30)
(17, 15, 30)
(14, 17, 31)
(15, 16, 31)
(16, 15, 31)
(17, 14, 31)
'''